<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"../mybatis-3-mapper.dtd">

<mapper namespace="mapper.product">

	<!-- 검색어와 일치하는 상품 중 공개 리스트 조회 -->
	<select id="searchlist" resultType="ProductDTO" parameterType="java.lang.String">
       <![CDATA[
           SELECT * FROM FOODMATE_PRODUCT_VIEW
           WHERE NAME LIKE '%' || #{keyword} || '%'
       ]]>
	</select>
	
	<!-- 전체 상품 중 공개 리스트 조회 -->
   <select id="alllist" resultType="ProductDTO">
	    SELECT * FROM FOODMATE_PRODUCT_VIEW
	    WHERE STATUS = 'Y'
	</select>
	
	<!-- 특정 판매자와 일치하는 상품 중 공개 리스트 조회 -->
	<select id="listBySlrId" resultType="ProductDTO" parameterType="java.lang.String">
	    SELECT * FROM FOODMATE_PRODUCT_VIEW
	    WHERE SLR_ID = #{slr_id} AND STATUS = 'Y'
	</select>
	
	<!-- 특정 판매자와 일치하는 모든 상품 리스트 조회(당사자용) -->
	<select id="listBySlrSelf" resultType="ProductDTO" parameterType="java.lang.String">
	    SELECT * FROM FOODMATE_PRODUCT_VIEW
	    WHERE SLR_ID = #{slr_id}
	</select>
	
	<!-- 조건에 따른 상품 검색 기능 / 단위당 가격 표시 실험중 -->
	<select id="searchlist2" resultType="ProductDTO" parameterType="map">
	    <![CDATA[
        SELECT p.*, 
	       CASE 
	           WHEN p.CATEGORY_ID IS NOT NULL 
	                AND p.QTY IS NOT NULL 
	                AND p.QTY > 0 
	           THEN 
	                CASE 
	                    WHEN p.UNIT = c.RECOMMEND_UNIT THEN p.PRICE / p.QTY
	                    WHEN p.UNIT IN ('L', 'l') AND c.RECOMMEND_UNIT IN ('ml', 'mL') THEN (p.PRICE / p.QTY) / 1000
	                    WHEN p.UNIT IN ('kg', 'KG') AND c.RECOMMEND_UNIT IN ('g', 'G') THEN (p.PRICE / p.QTY) / 1000
	                    ELSE p.PRICE / p.QTY
	                END 
	           ELSE NULL 
	       END AS UNIT_PRICE
		FROM FOODMATE_PRODUCT_VIEW p
		JOIN FOODMATE_SELLER s ON p.SLR_ID = s.SLR_ID
		LEFT JOIN FOODMATE_PRODUCT_CATEGORY c ON p.CATEGORY_ID = c.CATEGORY_ID
		WHERE p.STATUS = 'Y'
	    ]]>
	    
	    <if test="slr_id != null and slr_id != ''">
	        <![CDATA[ AND p.SLR_ID = #{seller_id} ]]>
	    </if>
	    
	    <if test="category_id != null">
	        <![CDATA[ AND p.CATEGORY_ID = #{category_id} ]]>
	    </if>
	    
	    <if test="keyword != null and keyword != ''">
	        <![CDATA[ AND p.NAME LIKE '%' || #{keyword} || '%' ]]>
	    </if>
	    
	    <choose>
	    	<when test="sort == 'price_asc'">
	            <![CDATA[ ORDER BY PRICE ASC]]>
	        </when>
	        <when test="sort == 'price_desc'">
	            <![CDATA[ ORDER BY PRICE DESC]]>
	        </when>
	        <when test="sort == 'unitprice_asc'">
	            <![CDATA[ ORDER BY UNIT_PRICE ASC]]>
	        </when>
	        <when test="sort == 'unitprice_desc'">
	            <![CDATA[ ORDER BY UNIT_PRICE DESC]]>
	        </when>
	        
	        <otherwise>
	            <![CDATA[ ORDER BY p.PDT_ID DESC ]]>
	        </otherwise>
	    </choose>
	    
	</select>
	
	<!-- 특정 상품 조회 -->
	<select id="getPdt" resultType="ProductDTO" parameterType="int">
		<![CDATA[
        SELECT p.*, 
	       CASE 
	           WHEN p.CATEGORY_ID IS NOT NULL 
	                AND p.QTY IS NOT NULL 
	                AND p.QTY > 0 
	           THEN 
	                CASE 
	                    WHEN p.UNIT = c.RECOMMEND_UNIT THEN p.PRICE / p.QTY
	                    WHEN p.UNIT IN ('L', 'l') AND c.RECOMMEND_UNIT IN ('ml', 'mL') THEN (p.PRICE / p.QTY) / 1000
	                    WHEN p.UNIT IN ('kg', 'KG') AND c.RECOMMEND_UNIT IN ('g', 'G') THEN (p.PRICE / p.QTY) / 1000
	                    ELSE p.PRICE / p.QTY
	                END 
	           ELSE NULL 
	       END AS UNIT_PRICE
		FROM FOODMATE_PRODUCT_VIEW p
		JOIN FOODMATE_SELLER s ON p.SLR_ID = s.SLR_ID
		LEFT JOIN FOODMATE_PRODUCT_CATEGORY c ON p.CATEGORY_ID = c.CATEGORY_ID
		WHERE p.STATUS = 'Y' AND p.PDT_ID = #{pdt_id}
	    ]]>
	</select>
	
	<!-- 카테고리 최상위만 가져온다. 상품등록할때 필요 -->
	<select id="getGrandCategory" resultType="CategoryDTO">
	    SELECT CATEGORY_ID, NAME, PARENT_ID
	    FROM FOODMATE_PRODUCT_CATEGORY
	    WHERE PARENT_ID IS NULL
	</select>
	
	<!-- 카테고리를 선택하면 그거에 해당하는 직계자식 카테고리만 가져온다. 상품등록할때 필요 -->
	<select id="getChildCategory" resultType="CategoryDTO" parameterType="java.lang.Integer">
		SELECT *
	    FROM FOODMATE_PRODUCT_CATEGORY
	    WHERE PARENT_ID = #{parent_id}
	</select>

	<!-- 특정 상품의 카테고리를 부모까지 싹 가져온다 -->
	<select id="getCategoryStep" resultType="CategoryDTO">
	    SELECT CATEGORY_ID, NAME
	    FROM FOODMATE_PRODUCT_CATEGORY
	    START WITH CATEGORY_ID = #{category_id}
	    CONNECT BY PRIOR PARENT_ID = CATEGORY_ID
	    ORDER BY LEVEL DESC
	</select>
	
	<select id="getNameById" parameterType="int" resultType="String">
	    SELECT name
	    FROM FOODMATE_PRODUCT
	    WHERE pdt_id = #{pdt_id}
	</select>
	
	<insert id="newPdt" parameterType="ProductDTO">
		INSERT INTO FoodMate_Product (PDT_ID, SLR_ID, NAME, IMG_PATH, PRICE, QTY, UNIT, CATEGORY_ID, STOCK, STATUS, DESCRIPTION)
		VALUES (FOODMATE_PRODUCT_SEQ.NEXTVAL, #{slr_id}, #{name}, #{img_path}, #{price}, #{qty}, #{unit}, #{category_id}, #{stock}, #{status}, #{description})
	</insert>
	
	<update id="editPdt" parameterType="ProductDTO">
	    UPDATE FoodMate_Product
	    SET 
	        NAME = #{name}, IMG_PATH = #{img_path}, PRICE = #{price}, 
	        QTY = #{qty}, UNIT = #{unit}, CATEGORY_ID = #{category_id}, STOCK = #{stock}, 
	        STATUS = #{status}, DESCRIPTION = #{description}
	    WHERE PDT_ID = #{pdt_id}
	</update>
	
	<delete id="deletePdt" parameterType="int">
	    DELETE FROM FoodMate_Product
	    WHERE PDT_ID = #{pdt_id}
	</delete>
	
<!-- 	<insert id="insertProductRating" parameterType="ProductRatingDTO">
    INSERT INTO FOODMATE_PRODUCT_RATING (CMT_PDT_RATING_ID, PDT_ID, BYR_ID, RATING, COMMENTS, CREATE_DATE)
    VALUES (FOODMATE_PRODUCT_RATING_SEQ.NEXTVAL, #{pdt_id}, #{byr_id}, #{rating}, #{comments}, SYSDATE)
</insert>
	
	<select id="getProductRatings" resultType="ProductRatingDTO" parameterType="int">
    SELECT CMT_PDT_RATING_ID, PDT_ID, BYR_ID, RATING, COMMENTS, CREATE_DATE
    FROM FOODMATE_PRODUCT_RATING
    WHERE PDT_ID = #{pdt_id}
</select>
	
	<delete id="deleteProductRating" parameterType="int">
    DELETE FROM FOODMATE_PRODUCT_RATING
    WHERE CMT_PDT_RATING_ID = #{cmt_pdt_rating_id}
</delete>
	
	
	<insert id="insertProductQna" parameterType="ProductQnaDTO">
    INSERT INTO FOODMATE_PRODUCT_QNA (CMT_PDT_QNA_ID, PDT_ID, USER_ID, COMMENTS, PARENT_ID, CREATE_DATE)
    VALUES (FOODMATE_PRODUCT_QNA_SEQ.NEXTVAL, #{pdt_id}, #{user_id}, #{comments}, #{parent_id}, SYSDATE)
</insert>
	
	<select id="getProductQna" resultType="ProductQnaDTO" parameterType="int">
    SELECT CMT_PDT_QNA_ID, PDT_ID, USER_ID, COMMENTS, PARENT_ID, CREATE_DATE
    FROM FOODMATE_PRODUCT_QNA
    WHERE PDT_ID = #{pdt_id}
    ORDER BY CREATE_DATE
</select>
	
	<delete id="deleteProductQna" parameterType="int">
    DELETE FROM FOODMATE_PRODUCT_QNA
    WHERE CMT_PDT_QNA_ID = #{cmt_pdt_qna_id}
</delete>
	 -->
	
</mapper>