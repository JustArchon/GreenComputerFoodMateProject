<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"../mybatis-3-mapper.dtd">

<mapper namespace="mapper.order">
	
	<resultMap id="orderAddressResultMap" type="orderaddressDTO">
	    <id property="ordId" column="ord_id"/>
	    <result property="postalCode" column="postal_code"/>
	    <result property="addr" column="addr"/>
	    <result property="addrDetail" column="addr_detail"/>
	    <result property="toName" column="to_name"/>
	    <result property="toPhoneNum" column="to_phone_num"/>
	</resultMap>
	
	
	<select id="getCartItemsByIds" parameterType="list" resultType="CartDTO">
	    SELECT * FROM FoodMate_CartList_View WHERE cart_id IN
	    <foreach item="cartId" collection="list" open="(" separator="," close=")">
	        #{cartId}
	    </foreach>
	</select>

	<!-- OrdIdById 쿼리 -->
	<select id="OrdIdById" resultType="java.lang.Integer">
	    SELECT ORD_ID
	    FROM FOODMATE_ORDER
	    WHERE BYR_ID = #{id}
	</select>
	
	<select id="OrdIdBySlrId" resultType="java.lang.Integer">
	    SELECT ORD_ID
	    FROM FOODMATE_ORDER
	    WHERE SLR_ID = #{id}
	</select>
	
	<select id="selectOrdId" resultType="java.lang.Integer">
	    SELECT ORD_ID
	    FROM FOODMATE_ORDER
	    WHERE SLR_ID = #{slr_id} AND BYR_ID = #{byr_id} AND ORD_CODE = #{ord_code}
	</select>
	<!-- 26~42줄의 경우 WHERE절 조건만 다르기 때문에 동적 SQL을 활용하여, 파라미터타입을 Map으로 하고 들어가는 키&값만 설정해주면 좋다고 한다 -->
	
	
	<!-- AllOrdByOrdIds 쿼리: resultType을 orderDTO로 수정 -->
	<select id="AllOrdByOrdIds" resultType="orderDetailDTO">
	    SELECT d.*, 
		       p.img_path, 
		       o.ord_stat,
		       o.create_date,
		       o.ord_code
		FROM foodmate_order_detail d
		LEFT JOIN foodmate_order o ON d.ord_id = o.ord_id
		LEFT JOIN foodmate_product p ON d.pdt_id = p.pdt_id
	    WHERE d.ORD_ID IN
	    <foreach item="id" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	    order by ord_detail_id
	</select>

	<insert id="insertOrderList" parameterType="orderDTO">
	    INSERT INTO FOODMATE_ORDER (ORD_ID, ORD_CODE, BYR_ID, SLR_ID, TOT_PDT_PRICE, SHIP_FEE, ORD_STAT, CREATE_DATE, DEL_CODE, WAYBILL_NUM)
	    VALUES (FOODMATE_ORDER_SEQ.NEXTVAL, #{ord_code}, #{byr_id}, #{slr_id}, #{tot_Pdt_Price}, #{ship_Fee}, #{ord_Stat}, SYSDATE, #{del_Code}, #{waybill_Num})
	</insert>
	
	<insert id="insertOrderDetail" parameterType="orderdetailDTO">
	    INSERT INTO FOODMATE_ORDER_DETAIL (ORD_DETAIL_ID, ORD_ID, PDT_ID, PDT_NAME, PDT_PRICE, QTY)
	    VALUES (FOODMATE_ORDER_DETAIL_SEQ.NEXTVAL, #{ord_id}, #{pdt_id}, #{pdt_name}, #{pdt_price}, #{qty})
	</insert>
	
	<insert id="insertOrderAddress" parameterType="orderaddressDTO">
	    INSERT INTO FOODMATE_ORDER_ADDRESS (ORD_ID, POSTAL_CODE, ADDR, ADDR_DETAIL, TO_NAME, TO_PHONE_NUM)
	    VALUES (#{ordId}, #{postalCode}, #{addr}, #{addrDetail}, #{toName}, #{toPhoneNum})
	</insert>
	
	<insert id="insertOrderPayment" parameterType="orderpaymentDTO">
	    INSERT INTO FOODMATE_PAYMENT (PAY_ID, ORD_ID, PG_ID, PAY_METHOD, PAY_STATUS, PAY_DATE, USED_POINT)
	    VALUES (FOODMATE_PAYMENT_SEQ.NEXTVAL, #{ord_id}, #{pg_id}, #{pay_Method}, #{pay_Status}, SYSDATE, #{used_point})
	</insert>
	
	<!-- 마이페이지에서 쓰는, 출력 전용 -->
	
	<!-- 구매자 마이페이지, 정상 주문만 출력 -->
	<select id="findOrdersByBuyer" parameterType="string" resultType="OrderDTOoutput">
        SELECT O.*, P.used_point
        FROM FOODMATE_ORDER O
        LEFT JOIN FOODMATE_PAYMENT P ON O.ORD_ID = P.ORD_ID
        WHERE BYR_ID = #{byr_id} AND ORD_STAT IN (1, 2, 3, 4)
        ORDER BY O.CREATE_DATE DESC
    </select>
    
    <select id="findRefundListByByrId" parameterType="string" resultType="OrderDTOoutput">
        SELECT O.*, P.pay_status, P.used_point
		FROM FOODMATE_ORDER O
		LEFT JOIN FOODMATE_PAYMENT P ON O.ORD_ID = P.ORD_ID
		WHERE O.BYR_ID = #{byr_id} AND O.ORD_STAT IN (5, 6)
		ORDER BY O.CREATE_DATE DESC
    </select>
    
    <select id="findReturnExchangeListByByrId" parameterType="string" resultType="OrderDTOoutput">
        SELECT O.*, P.used_point
        FROM FOODMATE_ORDER O
        LEFT JOIN FOODMATE_PAYMENT P ON O.ORD_ID = P.ORD_ID
        WHERE BYR_ID = #{byr_id} AND ORD_STAT IN (1, 2, 3, 6, 7, 8 ,9)
        ORDER BY O.CREATE_DATE DESC
    </select>
    
    <select id="findCancelOrdersByBuyer" parameterType="string" resultType="OrderDTOoutput">
        SELECT O.*, P.used_point
        FROM FOODMATE_ORDER O
        LEFT JOIN FOODMATE_PAYMENT P ON O.ORD_ID = P.ORD_ID
        WHERE BYR_ID = #{byr_id} AND ORD_STAT IN (5, 6)
        ORDER BY O.CREATE_DATE DESC
    </select>
    
    <!-- 구매자 마이페이지 메인에서 쓰는 출력 전용, 10개까지만 출력 -->
    <select id="findOrderDetailsByBuyer" parameterType="string" resultType="OrderDetailDTOoutput">
    	<![CDATA[
    	SELECT *
	    FROM (
	        SELECT o.*, d.ord_detail_id, d.pdt_id, d.pdt_name, d.pdt_price, d.qty, p.img_path
	        FROM foodmate_order o
	        LEFT JOIN foodmate_order_detail d ON d.ord_id = o.ord_id
	        LEFT JOIN foodmate_product p ON p.pdt_id = d.pdt_id
	        WHERE BYR_ID = #{byr_id}
	        ORDER BY o.ord_id DESC
	    )
	    WHERE ROWNUM <= 10
	    ]]>
	</select>

    <!-- 판매자 기준 주문 목록 조회 -->
    <select id="findOrdersBySeller" parameterType="map" resultType="OrderDTOoutput">
        SELECT * FROM
        FOODMATE_ORDER
        WHERE SLR_ID = #{slr_id} AND ORD_STAT = #{ord_stat}
    </select>

    <!-- 주문 상세 조회 -->
    <select id="findOrderDetailsByOrderId" parameterType="int" resultType="OrderDetailDTOoutput">
    	SELECT o.*, p.img_path
		FROM FOODMATE_ORDER_DETAIL o
		LEFT JOIN FOODMATE_PRODUCT p ON o.pdt_id = p.pdt_id
		WHERE o.ORD_ID = #{ord_id} 
    </select>
    
	<!-- 판매자 마이페이지 메인의 배송대기중 주문 -->
	<select id="mypageMainOrdList" resultType="OrderDTOoutput">
		select o.ord_id, o.create_date, oa.postal_code, oa.addr, oa.addr_detail, oa.to_name
		from foodmate_order o
		left join foodmate_order_address oa
		ON o.ord_id = oa.ord_id
		where o.ord_stat = 1 and o.slr_id = #{slr_id}
	</select>
    
    <!-- 주문번호로 주문 조회 -->
    <select id="findOrderByOrderId" parameterType="int" resultType="OrderDTOoutput">
    	SELECT * FROM
    	FOODMATE_ORDER
    	WHERE ORD_ID = #{ord_id}
    </select>
    
    <select id="findAddressByOrderId" parameterType="int" resultMap="orderAddressResultMap">
    	SELECT * FROM FOODMATE_ORDER_ADDRESS
    	WHERE ORD_ID = #{ord_id}
    </select>
	
	<!-- 운송장번호 입력하며 배송시작으로 변경 -->
	<update id="updateWaybill" parameterType="map">
	    UPDATE foodmate_order
	    SET del_code = #{del_code},
	        waybill_num = #{waybill_num},
	        ord_stat = 2
	    WHERE ord_id = #{ord_id}
	</update>
	
	<select id="isOwnOrder" resultType="int">
	    SELECT COUNT(*)
	    FROM foodmate_order
	    WHERE 
	    	<trim prefixOverrides="AND">
	        <if test="del_Code != null">
	            del_Code = #{del_Code}
	        </if>
	        <if test="waybill_Num != null">
	            AND waybill_Num = #{waybill_Num}
	        </if>
	        <if test="ord_id != null and ord_id != 0">
	            AND ord_id = #{ord_id}
	        </if>
	        </trim>
	        AND (byr_id = #{userId} OR slr_id = #{userId})
	</select>
	
	<update id="updateOrderStatus">
	    UPDATE FOODMATE_ORDER
	    SET ORD_STAT = #{ord_stat}
	    WHERE 
	    <trim prefixOverrides="AND">
        <if test="del_Code != null">
            del_Code = #{del_Code}
        </if>
        <if test="waybill_Num != null">
            AND waybill_Num = #{waybill_Num}
        </if>
        <if test="ord_id != null and ord_id != 0">
            AND ord_id = #{ord_id}
        </if>
        </trim>
	</update>
	
	<update id="updateOrderStatusByOrdCode" parameterType="map">
		UPDATE FOODMATE_ORDER
		SET ORD_STAT = #{ord_stat}
		WHERE SLR_ID = #{slr_id} AND ORD_CODE = #{ord_code}
	</update>
	
		    <!-- 사용자가 주문한 상품 목록을 가져오는 쿼리 -->
    <select id="getOrderedProductsByBuyerId" parameterType="String" resultType="com.spring.FoodMate.product.dto.ProductDTO">
        SELECT 
            p.pdt_id, 
            p.name, 
            p.img_path, 
            p.price
        FROM 
            FOODMATE_PRODUCT p
        JOIN 
            FOODMATE_ORDER_DETAIL od ON p.pdt_id = od.pdt_id
        JOIN 
            FOODMATE_ORDER o ON od.ord_id = o.ord_id
        WHERE 
            o.byr_id = #{buyerId}
    </select>
    
    <!-- 상품테이블에서 재고 감소시키는데, 재고가 구매량보다 적을경우 아예 검색이안되고 0을 반환함 -->
    <update id="reducePdtStock">
    	UPDATE FOODMATE_PRODUCT
	    SET stock = stock - #{qty}
	    WHERE pdt_id = #{pdt_id} AND stock >= #{qty}
	</update>
	
	<!-- Admin 옵션 -->
		<!-- 구매자 마이페이지, 정상 주문만 출력 -->
	<select id="selectAdminPaymentInfo" parameterType="map" resultType="OrderPaymentDTO">
        SELECT O.*, P.used_point
        FROM FOODMATE_ORDER O
        LEFT JOIN FOODMATE_PAYMENT P ON O.ORD_ID = P.ORD_ID
        WHERE BYR_ID = #{byr_id} AND ORD_STAT IN (1, 2, 3, 4)
        ORDER BY O.CREATE_DATE DESC
    </select>
</mapper>